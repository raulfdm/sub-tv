name: Node CI

on: push

jobs:
  install_deps:
    runs-on: ubuntu-latest
    paths:
      - .yarn-cache/
      - node_modules
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - name: Install dependencies
        run: yarn --frozen-lockfile --cache-folder=.yarn-cache
      - name: Get yarn cache --cache-folder .yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  lint:
    name: Linting
    needs: install_deps
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Run Lint
        run: yarn lint
  # build_cli:
  #   name: Building CLI
  #   needs: lint
  #   env:
  #     CI: true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #     - name: Install dependencies
  #       run: yarn --frozen-lockfile
  #     - name: Build
  #       working-directory: ./cli
  #       run: yarn build
